/*
 * system.c
 *
 *  Created on: ٢٧‏/١٠‏/٢٠٢٣
 *      Author: dell
 */

#include "system.h"
#include "std_types.h"
#include "dcmotor.h"
#include "external_eeprom.h"
#include "uart.h"
#include "timer1.h"
#include "buzzer.h"

uint8 password[5],confirm_password[5];

static volatile uint8 g_tick=0;

void recievePasswordFromUser(void){
	uint8 i=0;
	for(i=0;i<PASSWORD_DIGITS_NUMBER;i++){
		password[i]=UART_recieveByte();
	}
}

void recieveConfirmPasswordFromUser(void){
	uint8 i=0;
	for(i=0;i<PASSWORD_DIGITS_NUMBER;i++){
		confirm_password[i]=UART_recieveByte();
	}
}


passwords_equal_state checkPassword(void){
	uint8 i=0;
	passwords_equal_state state=TRUE;
	for(i=0;i<PASSWORD_DIGITS_NUMBER;i++)
	{
		//g_password[i]=arr1[i]; /* store password while the first password entry is the same of the second password entry */
		if(password[i]!=confirm_password[i])
		{
			return state=FALSE;

		}
	}

	storeInEEPROM();

	return state;
}


void storeInEEPROM(void)
{
	uint8 i;
	/* Write pass in EEPROM*/
	for(i=0 ;i<PASSWORD_DIGITS_NUMBER ;i++)
	{
		EEPROM_writeByte(((0x0000)+i) ,password[i]);
	}

}

uint8 checkPasswordInEEPROM(void)
{
	uint8 i,read_data;
	/* Write pass in EEPROM*/
	for(i=0 ;i<PASSWORD_DIGITS_NUMBER ;i++)
	{
		EEPROM_readByte(((0x0000)+i) ,&read_data);
		if(read_data!=password[i]){
			return FALSE;
		}
	}
	return TRUE;
}


void motorOperation(void)
{
	DCMOTOR_rotate(CLOCK_WISE,100); //15 seconds
	delayInSeconds(15);
	DCMOTOR_rotate(STOP,0);
	delayInSeconds(3);
	DCMOTOR_rotate(ANTI_CLOCK_WISE,100); //15 seconds
	delayInSeconds(15);
	DCMOTOR_rotate(STOP,0);


}


void tickIncreament(void)
{
	g_tick++;
}

void delayInSeconds(uint8 number_seconds)
{
	g_tick=0;

	Timer1_ConfigType timer1={0,1563,F_CPU_1024,CTC};
	Timer1_init(&timer1);

	Timer1_setCallBack(tickIncreament);
	while(g_tick<5*number_seconds);
	Timer1_deInit();

}

void BUZZER_active(void)
{
	BUZZER_init();
	BUZZER_ON();
	delayInSeconds(60);
	BUZZER_OFF();
}



